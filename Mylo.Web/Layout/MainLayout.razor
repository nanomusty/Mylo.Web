@inherits LayoutComponentBase

@inject HttpClient Http
@inject NavigationManager Navigation
@inject BasePage BasePage
@inject SessionInfo SessionInfo

@inject IWebAssemblyHostEnvironment HostEnvironment

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.Medium"
                   CloseButton="true"
                   BackdropClick="false"
                   NoHeader="true"
                   Position="DialogPosition.Center"
                   CloseOnEscapeKey="true"
                   BackgroundClass="my-custom-class" />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Mylo</MudText>
        <MudSpacer />
        @if (HostEnvironment.IsDevelopment())
        {
            <MudText Typo="Typo.h6" Color="Color.Error" Align="Align.Center" Class="development-mode-banner">
                Development Mode
            </MudText>
        }
        <MudSpacer />
        @if (isAuthenticated)
        {
            <MudMenu AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" Dense="true">
                <ActivatorContent>
                    <MudStack Row="true" Spacing="2" Class="pa-1" AlignItems="AlignItems.Center">
                        <MudAvatar Color="Color.Info" Size="Size.Medium">
                            <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368">
                                <path d="M234-276q51-39 114-61.5T480-360q69 0 132 22.5T726-276q35-41 54.5-93T800-480q0-133-93.5-226.5T480-800q-133 0-226.5 93.5T160-480q0 59 19.5 111t54.5 93Zm246-164q-59 0-99.5-40.5T340-580q0-59 40.5-99.5T480-720q59 0 99.5 40.5T620-580q0 59-40.5 99.5T480-440Zm0 360q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q53 0 100-15.5t86-44.5q-39-29-86-44.5T480-280q-53 0-100 15.5T294-220q39 29 86 44.5T480-160Zm0-360q26 0 43-17t17-43q0-26-17-43t-43-17q-26 0-43 17t-17 43q0 26 17 43t43 17Zm0-60Zm0 360Z" />
                            </svg>
                        </MudAvatar>
                        <MudIcon Icon="@Icons.Material.Filled.ArrowDropDown" Class="ml-1" Style="transform: translateY(-1px);" />
                    </MudStack>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem Href="/Account/Profile" Icon="@Icons.Material.Filled.AssignmentInd">Profile</MudMenuItem>
                    <MudMenuItem Href="/Account/change-password" Icon="@Icons.Material.Filled.Key">Change Password</MudMenuItem>
                    <MudMenuItem Href="/Account/organisation-information" Icon="@Icons.Material.Filled.Apartment">Organisation Information</MudMenuItem>
                    <MudMenuItem Href="/Account/feedback" Icon="@Icons.Material.Filled.Feedback">Feedback</MudMenuItem>
                    <MudMenuItem Href="https://donate.stripe.com/cN23fN0MQdX4cmI9AA" Icon="@Icons.Material.Filled.AttachMoney">Donate</MudMenuItem>
                    <MudDivider />
                    <MudMenuItem OnClick="Logout" Icon="@Icons.Material.Filled.Logout">Sign Out</MudMenuItem>
                </ChildContent>
            </MudMenu>
        }
        else
        {
            <MudButton Href="/Account/Register" StartIcon="@Icons.Material.Filled.Key" Color="Color.Inherit" Class="ml-3">Register</MudButton>
            <MudButton Href="Account/Login" StartIcon="@Icons.Material.Filled.Login" Color="Color.Inherit" Class="ml-3">Login</MudButton>
        }
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        @if (!isAuthenticated)
        {
            <MudNavMenu Class="mud-width-full" Color="Color.Info">
                <MudNavLink Href="Account/Login" Icon="@Icons.Material.Filled.Login">Login</MudNavLink>
            </MudNavMenu>
        }
        else
        {
            <MudPaper Class="d-inline-flex py-3" Elevation="0">
                <MudNavMenu Class="mud-width-full" Color="Color.Info">
                    <MudNavLink Href="dashboard" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
                    <MudDivider />
                    @if (SessionInfo.UserType == Enumerations.UserType.SuperAdministrator)
                    {
                        <MudNavGroup Title="Management" Icon="@Icons.Material.Filled.ManageAccounts">
                            <MudNavLink Href="/management/organisations" Icon="@Icons.Material.Filled.Apartment">Organisations</MudNavLink>
                            <MudNavLink Href="/management/feedbacks" Icon="@Icons.Material.Filled.Feedback">Feedbacks</MudNavLink>
                            <MudNavLink Href="/management/contacts" Icon="@Icons.Material.Filled.ContactMail">Contacts</MudNavLink>
                            <MudNavLink Href="/management/release-notes" Icon="@Icons.Material.Filled.NewReleases">Release Note</MudNavLink>
                        </MudNavGroup>
                    }
                    @if (SessionInfo.UserType > Enumerations.UserType.Normal)
                    {
                        <MudNavGroup Title="Settings" Icon="@Icons.Material.Filled.Settings">
                            <MudNavLink Href="/settings/users" Icon="@Icons.Material.Filled.Person">Users</MudNavLink>
                            <MudNavLink Href="/settings/groups" Icon="@Icons.Material.Filled.Groups">Groups</MudNavLink>
                        </MudNavGroup>
                    }
                    <MudNavGroup Title="File" Icon="@Icons.Material.Filled.Folder">
                        <MudNavLink Href="/file/clients" Icon="@Icons.Material.Filled.Contacts">Clients</MudNavLink>
                        <MudNavLink Href="/file/debtors" Icon="@Icons.Material.Filled.Person">Debtors</MudNavLink>
                        <MudNavLink Href="/file/cases" Icon="@Icons.Material.Filled.List">Cases</MudNavLink>
                        <MudNavLink Href="/file/meetings" Icon="@Icons.Material.Filled.Notes">Meetings</MudNavLink>
                    </MudNavGroup>
                    @if (SessionInfo.PriceTier > PriceTier.Free) @* Basic, Standart, Premium, Ultimate*@
                    {
                        <MudNavGroup Title="Cost Management" Icon="@Icons.Material.Filled.Payments">
                            <MudNavLink Href="/cost-management/expenses" Icon="@Icons.Material.Filled.Money">Expenses</MudNavLink>
                        </MudNavGroup>
                        <MudNavGroup Title="Collections" Icon="@Icons.Material.Filled.Payment">
                            <MudNavLink Href="/collection-management/collections" Icon="@Icons.Material.Filled.Paid">Collections</MudNavLink>
                        </MudNavGroup>
                    }
                    @if (SessionInfo.PriceTier > PriceTier.Basic) @* Standart, Premium, Ultimate*@
                    {
                        <MudNavGroup Title="Asset Management" Icon="@Icons.Material.Filled.Analytics">
                            <MudNavLink Href="/asset-management/fixture" Icon="@Icons.Custom.Brands.Microsoft">Fixture</MudNavLink>
                        </MudNavGroup>
                    }
                    @if (SessionInfo.PriceTier > PriceTier.Free) @* Basic, Standart, Premium, Ultimate*@
                    {
                        <MudNavGroup Title="Reporting" Icon="@Icons.Material.Filled.Report">
                            <MudNavLink Href="#" Icon="@Icons.Material.Filled.ReportOff">Report</MudNavLink>
                        </MudNavGroup>
                    }
                    <MudNavGroup Title="Tools" Icon="@Icons.Material.Filled.Handyman">
                        <MudNavLink Href="/tools/contacts" Icon="@Icons.Material.Filled.Contacts">Contact Cards</MudNavLink>
                    </MudNavGroup>

                    <MudDivider />
                </MudNavMenu>
            </MudPaper>
        }


        @* burada amazon affiliate linkleri kullanilacak. hukuk kitaplari icin *@

        @* <MudCard Style="width: 100%;">
            <MudCardContent>
                <MudTextField @bind-Value="previewUrl" Label="Affiliate Link Girin" Variant="Variant.Outlined" Dense="true" />
                <MudButton OnClick="GetPreview" Color="Color.Primary" Variant="Variant.Filled" Class="mt-2">Önizleme Getir</MudButton>

                @if (preview != null)
                {
                    <MudPaper Class="mt-3 pa-2">
                        <img src="@preview.image" style="width: 100%; max-height: 60px; object-fit: cover;" />
                        <MudText Typo="Typo.subtitle1">@preview.title</MudText>
                        <MudText Typo="Typo.body2">@preview.description</MudText>
                        <MudLink Href="@preview.url" Target="_blank">Linke Git</MudLink>
                    </MudPaper>
                }
            </MudCardContent>
        </MudCard> *@
    </MudDrawer>

    <MudMainContent>
        @Body
    </MudMainContent>


</MudLayout>

@code {
    bool _drawerOpen = true;
    // string previewUrl;
    // PreviewResult preview;
    private bool isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        await SessionInfo.LoadSessionFromLocalStorage();
        isAuthenticated = await SessionInfo.IsAuthenticatedAsync();
        StateHasChanged();
    }

    private async Task RegisterPage()
    {
        BasePage.NavigationManager.NavigateTo("/Account/Register", true);
        await Task.CompletedTask;
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Logout()
    {
        await SessionInfo.ClearSession();
        BasePage.NavigationManager.NavigateTo("/Account/Login", true);
        StateHasChanged();
    }

    public class PreviewResult
    {
        public string title { get; set; }
        public string description { get; set; }
        public string image { get; set; }
        public string url { get; set; }
    }

    // private async Task GetPreview()
    // {
    //     if (string.IsNullOrWhiteSpace(previewUrl))
    //         return;

    //     try
    //     {
    //         string apiKey = "322044163827071bd4742a9e1447c5eb";
    //         var requestUrl = $"https://api.linkpreview.net/?key={apiKey}&q={Uri.EscapeDataString(previewUrl)}";

    //         preview = await Http.GetFromJsonAsync<PreviewResult>(requestUrl);
    //     }
    //     catch (Exception ex)
    //     {
    //         Console.WriteLine($"Önizleme hatası: {ex.Message}");
    //     }
    // }
}
